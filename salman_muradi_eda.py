# -*- coding: utf-8 -*-
"""Salman Muradi - EDA

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b91t0Wi8dMHtRViu73GCStMc4rgNjpIq

# **Exploratory Data Analytics (EDA)**

## **`Step 1: Imports`**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from collections import Counter

companies = pd.read_csv('/content/Unicorn_Companies.csv')

"""## **Step 2: Data Exploration**"""

companies.head(10)

companies.shape

companies.drop_duplicates().shape

"""1074 companies within this dataset."""

companies.info()

companies.dtypes

missing_values = companies.isnull().sum()
missing_values

"""## **Step 3: Handle Missing Values**"""

companies['Funding'] = companies['Funding' ].fillna('0B')

companies['Industry'] = companies['Industry' ].fillna('Unknown')

companies['Select Investors'] = companies['Select Investors' ].fillna('Unknown')

companies['City'] = companies['City' ].fillna('Unknown')

companies.isnull().sum()

"""## **Step 4: Data Cleaning**"""

def cleaning_data(value):
    if isinstance(value, str):
        if 'B' in value:
            return float(value.replace ('B', '').replace('$', ''))
        elif 'M' in value:
            return float(value.replace('M', '').replace('$', '')) / 1000
    return 0
companies['Valuation']= companies['Valuation'].apply(cleaning_data)
companies['Funding']= companies['Funding'].apply(cleaning_data)

companies['Date Joined'] = pd.to_datetime(companies['Date Joined'])

companies.info()

companies['Year Founded'].describe()

def remove_outliers(df, column):
    Q1 = df[column].quantile(0.25)
    Q3 = df[column].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    return df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]

companies = remove_outliers(companies, 'Valuation')
companies = remove_outliers(companies, 'Funding')
companies = remove_outliers(companies, 'Year Founded')

companies['Industry'] = companies['Industry'].replace({
    'Artificial intelligence': 'Artificial Intelligence'
})

"""## **Step 5: Statistics**"""

companies.describe()

"""## **Step 6: Visualised Exploration**

### Valuation and Funding Analysis:
"""

sns.histplot(companies['Valuation'], color='blue', label='Valuation')
plt.title('Distribution of Valuation (in $B)')
plt.xlabel('Valuation ($B)')
plt.ylabel('Frequency')
plt.legend()
plt.grid(axis='y', linestyle='--', alpha=0.5)

sns.histplot(companies['Funding'], bins=30, kde=True, color='green', label='Funding')
plt.title('Distribution of Funding (in $B)')
plt.xlabel('Funding ($B)')
plt.ylabel('Frequency')
plt.legend()
plt.grid(axis='y', linestyle='--', alpha=0.7)

"""### Industry Analytics"""

industry_counts = companies['Industry'].value_counts()
plt.figure(figsize=(12, 8))
sns.barplot(y=industry_counts.index, x=industry_counts.values, palette='tab10')
plt.title('Number of Unicorns by Industry')
plt.xlabel('Number of Companies')
plt.ylabel('Industry')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

industry_counts = companies['Industry'].value_counts()

plt.figure(figsize=(12, 8))
sns.barplot(y=industry_counts.index, x=industry_counts.values, palette='tab10')

for index, value in enumerate(industry_counts.values):
    plt.text(value, index, str(value), va='center', ha = 'right', color = 'white', fontweight='bold')

plt.title('Number of Unicorns by Industry', fontsize=16)
plt.xlabel('Number of Companies', fontsize=12)
plt.ylabel('Industry', fontsize=12)
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

"""### Geographic Analysis:"""

continent_counts = companies['Continent'].value_counts()

sns.barplot(y = continent_counts.index, x = continent_counts.values)
plt.title('Number of Unicorns by Continent')
plt.xlabel('Number of Unicorns')
plt.ylabel('Continent')
plt.show()

continent_counts = companies['Continent'].value_counts()

plt.figure(figsize=(10, 6))
sns.barplot(y=continent_counts.index, x=continent_counts.values, palette='tab10')

for index, value in enumerate(continent_counts.values):
    plt.text(value, index, str(value), va='center', fontweight='bold', ha = 'left', color = 'black')

plt.title('Number of Unicorns by Continent')
plt.xlabel('Number of Companies')
plt.ylabel('Continent')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

country_count = companies['Country/Region'].value_counts().head(10)

sns.barplot(y = country_count.index, x = country_count.values)
plt.title('Top 10 Countries with the Most Unicorns')
plt.xlabel('Number of Unicorns')
plt.ylabel('Country/Region')
plt.show()

country_counts = companies['Country/Region'].value_counts().head(10)

plt.figure(figsize=(12, 8))
sns.barplot(y=country_counts.index, x=country_counts.values, palette='tab10')

for index, value in enumerate(country_counts.values):
    plt.text(value, index, str(value), va='center', fontweight='bold')

plt.title('Top 10 Countries with Most Unicorns')
plt.xlabel('Number of Companies')
plt.ylabel('Country/Region')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

"""### Temporal Analysis:"""

sns.histplot(companies['Year Founded'], bins = 30, kde = True, color = 'blue')
plt.title('Year Founded Distribution')
plt.xlabel('Year Founded')
plt.ylabel('Number of Companies')
plt.show()

sns.histplot(companies['Date Joined'], bins = 30, kde = True, color = 'orange')
plt.title('Year Joined Unicorn Club')
plt.xlabel('Date Joined')
plt.ylabel('Number of Companies')
plt.show()

"""### Investors Analysis"""

investors = companies['Select Investors'].dropna().str.split(', ').sum()
investors_count = Counter(investors).most_common(10)
investors_count

investors_name, investors_frequencies =zip(*investors_count)

plt.figure(figsize=(10, 6))

sns.barplot(x = list(investors_frequencies), y=list(investors_name), palette = 'tab10')

for index, value in enumerate(investors_frequencies):
    plt.text(value - 0.1, index, str(value), va='center', fontweight='bold', fontsize=10, color='white', ha = 'right')

plt.title('Top 10 Investors')
plt.xlabel('Count of Investors')
plt.ylabel('Investors')
plt.show()

sns.boxplot(data = companies, x = 'Funding', y = 'Industry', palette = 'Set3')
plt.title('Funding Distribution by Industry')
plt.xlabel('Funding ($B)')
plt.ylabel('Industry')
plt.show()

plt.figure(figsize=(14, 6))
sns.boxplot(data=companies, x='Funding', y='Industry', palette='Set3')
plt.title('Funding Distribution by Industry')
plt.xlabel('Funding ($B)')
plt.ylabel('Industry')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

numerics = companies[['Valuation', 'Funding', 'Year Founded', 'Years to Join']].dropna()
corr = numerics.corr()

sns.heatmap(corr, annot = True, cmap = 'coolwarm', fmt = " .2f")
plt.title('Correlation Heatmap')
plt.show()

year_founded_count = companies['Year Founded'].value_counts().sort_index()
plt.plot(year_founded_count.index, year_founded_count.values, marker = 'o', color = 'blue')
plt.title('Number of companies by year')
plt.xlabel('Year')
plt.ylabel('Number of Companies')
plt.show()

numerical_data = companies[['Valuation', 'Funding', 'Year Founded', 'Years to Join']].dropna()
correlation_matrix = numerical_data.corr()

plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", cbar_kws={'label': 'Correlation Coefficient'})
plt.title('Correlation Heatmap')
plt.xticks(rotation=45)
plt.yticks(rotation=0)
plt.show()

plt.figure(figsize=(14, 6))

plt.subplot(1, 2, 1)
year_founded_count = companies['Year Founded'].value_counts().sort_index()
plt.plot(year_founded_count.index, year_founded_count.values, marker='o', label='Companies Founded')
plt.title('Number of Companies Founded by Year')
plt.xlabel('Year')
plt.ylabel('Number of Companies')
plt.grid(True, linestyle='--', alpha=0.7)
plt.legend()


plt.subplot(1, 2, 2)
year_joined_count = companies['Date Joined'].dt.year.value_counts().sort_index()
plt.plot(year_joined_count.index, year_joined_count.values, marker='o', color='orange', label='Companies Joining Unicorn Club')
plt.title('Number of Companies Joining Unicorn Club by Year')
plt.xlabel('Year')
plt.ylabel('Number of Companies')
plt.grid(True, linestyle='--', alpha=0.7)
plt.legend()

plt.tight_layout()
plt.show()

top_10_valuation = companies.nlargest(10, 'Valuation')[['Company', 'Valuation']]
sns.barplot(data = top_10_valuation, x = 'Valuation', y = 'Company', palette = 'Spectral')
plt.title('Top 10 companies by Valuation')
plt.xlabel('Valuation ($B)')
plt.ylabel('Company')
plt.show()

top_10_valuation = companies.nlargest(10, 'Valuation')[['Company', 'Valuation']]

plt.figure(figsize=(12, 6))
sns.barplot(data=top_10_valuation, x='Valuation', y='Company', palette='Spectral')
plt.title('Top 10 Companies by Valuation')
plt.xlabel('Valuation ($B)')
plt.ylabel('Company')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

industry_continent_matrix = companies.groupby(['Industry', 'Continent']).size().unstack(fill_value=0)

plt.figure(figsize=(12, 8))
sns.heatmap(industry_continent_matrix, cmap='Blues', annot=True, fmt="d", cbar=False, linewidths=0.5, linecolor='gray')
plt.title('Industry vs Continent: Number of Unicorns')
plt.xlabel('Continent')
plt.ylabel('Industry')
plt.show()

"""## **Step 7: Feature Engineering**"""

companies['Years to Join'] = companies['Date Joined'].dt.year - companies['Year Founded']

sns.histplot(companies['Years to Join'], color = 'teal')
plt.title('Years to Join Distribution')
plt.xlabel('Years to Join')
plt.ylabel('Number of Companies')
plt.show()

"""# **Bivariate Analysis**

## Valuation vs. Funding
"""

plt.figure(figsize=(10, 6))
sns.scatterplot(data=companies, x='Funding', y='Valuation', hue = 'Continent',  palette='tab10', alpha=0.8)
sns.regplot(data=companies, x='Funding', y='Valuation', scatter=False, color='red', line_kws={"label": "Trendline"})
plt.title('Valuation vs. Funding')
plt.xlabel('Funding ($B)')
plt.ylabel('Valuation ($B)')
plt.legend(title='Continent')
plt.grid(alpha=0.5)
plt.show()

#hue='Continent',

"""## Time to Unicorn vs. Valuation"""

plt.figure(figsize=(10, 6))
sns.scatterplot(data=companies, x='Years to Join', y='Valuation', hue='Continent', palette='tab10', alpha=0.8)
sns.regplot(data=companies, x='Years to Join', y='Valuation', scatter=False, color='blue', line_kws={"label": "Trendline"})
plt.title('Time to Unicorn vs. Valuation')
plt.xlabel('Time to Unicorn (Years)')
plt.ylabel('Valuation ($B)')
plt.legend(title='Continent')
plt.grid(alpha=0.5)
plt.show()

"""## Valuation by Continent"""

plt.figure(figsize=(10, 6))
sns.boxplot(data=companies, x='Continent', y='Valuation', palette='Set2')
plt.title('Valuation by Continent')
plt.xlabel('Continent')
plt.ylabel('Valuation ($B)')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

"""## Funding by Industry"""

plt.figure(figsize=(14, 6))
sns.boxplot(data=companies, x='Funding', y='Industry', palette='coolwarm')
plt.title('Funding Distribution by Industry')
plt.xlabel('Funding ($B)')
plt.ylabel('Industry')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.show()

"""# **Multivariate Analysis**

## Valuation, Funding, and Industry
"""

plt.figure(figsize=(10, 6))
sns.scatterplot(
    data=companies,
    x='Funding',
    y='Valuation',
    hue='Continent',
    size='Years to Join',
    palette='tab10',
    alpha=0.8,
    sizes=(20, 200)
)
plt.title('Valuation vs. Funding by Continent (Bubble Size: Time to Unicorn)')
plt.xlabel('Funding ($B)')
plt.ylabel('Valuation ($B)')
plt.legend( bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(alpha=0.5)
plt.show()

"""## Expanded Correlation Matrix"""

expanded_corr = companies[['Valuation', 'Funding', 'Year Founded', 'Years to Join']].corr()

plt.figure(figsize=(8, 6))
sns.heatmap(expanded_corr, annot=True, cmap='coolwarm', fmt=".2f", cbar_kws={'label': 'Correlation Coefficient'})
plt.title('Expanded Correlation Matrix')
plt.show()

"""## FacetGrid: Valuation and Funding across Continents and Industries"""

g = sns.FacetGrid(companies, col='Continent', hue='Industry', col_wrap=3, height=4, palette='tab10')
g.map(sns.scatterplot, 'Funding', 'Valuation', alpha=0.7)
g.add_legend()
g.set_titles('{col_name}')
g.set_axis_labels('Funding ($B)', 'Valuation ($B)')
plt.subplots_adjust(top=0.9)
g.fig.suptitle('Valuation vs. Funding Across Continents and Industries')
plt.show()